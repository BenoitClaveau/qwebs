0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@2.14.4
3 info using node@v4.1.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'C:\\Dev\\qwebs\\qwebs',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\Ben\AppData\Roaming\npm-cache\qwebs\0.0.37\package.tgz not in flight; packing
9 verbose tar pack [ 'C:\\Users\\Ben\\AppData\\Roaming\\npm-cache\\qwebs\\0.0.37\\package.tgz',
9 verbose tar pack   'C:\\Dev\\qwebs\\qwebs' ]
10 verbose tarball C:\Users\Ben\AppData\Roaming\npm-cache\qwebs\0.0.37\package.tgz
11 verbose folder C:\Dev\qwebs\qwebs
12 info prepublish qwebs@0.0.37
13 verbose addLocalTarball adding from inside cache C:\Users\Ben\AppData\Roaming\npm-cache\qwebs\0.0.37\package.tgz
14 silly cache afterAdd qwebs@0.0.37
15 verbose afterAdd C:\Users\Ben\AppData\Roaming\npm-cache\qwebs\0.0.37\package\package.json not in flight; writing
16 verbose afterAdd C:\Users\Ben\AppData\Roaming\npm-cache\qwebs\0.0.37\package\package.json written
17 silly publish { name: 'qwebs',
17 silly publish   version: '0.0.37',
17 silly publish   description: 'Back-end web server',
17 silly publish   main: 'index.js',
17 silly publish   dependencies:
17 silly publish    { q: '^1.4.1',
17 silly publish      'html-compress': '^0.0.4',
17 silly publish      'clean-css': '^3.4.8',
17 silly publish      multiparty: '^4.1.2',
17 silly publish      'uglify-js': '^2.6.1',
17 silly publish      'sass.js': '^0.6.3',
17 silly publish      jimp: '^0.2.20' },
17 silly publish   devDependencies:
17 silly publish    { 'jasmine-node': '^2.0.0',
17 silly publish      request: '^2.67.0',
17 silly publish      coveralls: '2.10.0',
17 silly publish      istanbul: '0.4.0' },
17 silly publish   scripts:
17 silly publish    { test: 'node_modules/jasmine-node/bin/jasmine-node tests/*.spec.js',
17 silly publish      'test-cover': 'istanbul cover node_modules/jasmine-node/bin/jasmine-node --captureExceptions tests/*.spec.js && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage' },
17 silly publish   repository: { type: 'git', url: 'git+https://github.com/beny78/qwebs.git' },
17 silly publish   keywords:
17 silly publish    [ 'webserver',
17 silly publish      'promise',
17 silly publish      'backend',
17 silly publish      'back-end',
17 silly publish      'back',
17 silly publish      'end',
17 silly publish      'web',
17 silly publish      'server',
17 silly publish      'q',
17 silly publish      'http',
17 silly publish      'router',
17 silly publish      'routing',
17 silly publish      'route',
17 silly publish      'backbone',
17 silly publish      'angular',
17 silly publish      'react' ],
17 silly publish   author: { name: 'Beno√Æt Claveau', email: 'beny78@gmail.com' },
17 silly publish   license: 'MIT',
17 silly publish   bugs: { url: 'https://github.com/beny78/qwebs/issues' },
17 silly publish   homepage: 'https://github.com/beny78/qwebs',
17 silly publish   readme: '# Qwebs\r\n Light and optimized [promise](https://www.npmjs.com/package/q) web server.\r\n\r\n [![NPM][npm-image]][npm-url]\r\n [![Build Status][travis-image]][travis-url]\r\n [![Coverage Status][coveralls-image]][coveralls-url]\r\n\r\n Qwebs is designed to be used with Single Page Application framework like [Angular](https://angularjs.org/), [React](https://facebook.github.io/react/) or [Backbone](http://backbonejs.org/).\r\n\r\n## Features\r\n\r\n  * [Promises](https://www.npmjs.com/package/q)\r\n  * Routing\r\n  * Dependency injection\r\n  * Compress response\r\n  * Avoid disk access at runtime\r\n  * Html, css and javascript minification\r\n  * Bundle css, [sass](https://www.npmjs.com/package/node-sass)\r\n  \r\n### Promises\r\n\r\n  * Easier to read\r\n  * Easier to maintain in the future\r\n  * Easier error handling\r\n\r\n### Routing\r\n\r\nOur goal is to find the final route as fast as possible.\r\nWe use a tree data structure to represent all routes.\r\n\r\n  * get(route, service, method)\r\n  * post(route, service, method)\r\n  * put(route, service, method)\r\n  * delete(route, service, method)\r\n\r\n```js\r\nqwebs.get("/user/:id", "$users", "get"); \r\nqwebs.post("/user", "$users", "save");\r\n```\r\n\r\n### Dependency injection\r\n\r\nJust declare the service name in your constructor.\r\n\r\n```js\r\n//services/user.js\r\nfunction UserService($config) {\r\n```\r\n\r\nQwebs will create your service with its dependencies.\r\n\r\n```js\r\n//server.js\r\nqwebs.inject("$user", "./services/user");\r\n```\r\n\r\n### Response\r\n\r\nYour response is automatically compressed with Gzip or Deflate.\r\n\r\n  * response.send({request, statusCode, header, content, stream})\r\n    - [request](https://nodejs.org/api/http.html#http_class_http_clientrequest)\r\n    - [statusCode](http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html#sec6.1)\r\n    - [header](http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html#sec6.2) \r\n    - content: js, html, json, ... *(call response.write(content))*\r\n    - or\r\n    - [stream](https://nodejs.org/api/stream.html) *(call stream.pipe(response))*\r\n  \r\n  * qwebs.invoke(request, response, overridenUrl)\r\n    - Usefull to route to an asset\r\n   \r\n$response sevice could be overridden\r\n\r\n```js\r\n//services/myresponse.js\r\nvar Q = require("q"),\r\n    ResponseService = require("qwebs/lib/services/response"),\r\n    DataError = require("qwebs/lib/dataerror");\r\n\r\nfunction MyResponseService() {\r\n};\r\n\r\nMyResponseService.prototype = Object.create(ResponseService.prototype);\r\nMyResponseService.prototype.constructor = MyResponseService;\r\n\r\nMyResponseService.prototype.send = function (response, data) {\r\n    var self = this;\r\n    return Q.try(function () {\r\n        //YOUR CODE\r\n        return ResponseService.prototype.send.call(self, response, data);\r\n    });\r\n};\r\n\r\nexports = module.exports = MyResponseService;\r\n```\r\n\r\nReplace $response service in $injector before load Qwebs.\r\n\r\n```js\r\nqwebs.inject("$response", "./services/myresponse");\r\n```\r\n\r\n### Avoid disk access at runtime\r\n\r\nAll assets are loaded in memory at startup.\r\nUploaded images are not saved in temporary files. $qjimp service is designed to read, manipulate image stream.\r\n\r\n### Bundle (bundle.json)\r\n\r\nCreate your own css or js bundle.\r\nQwebs includes a [Sass](https://www.npmjs.com/package/node-sass) preprocessor. You don\'t need to compile your sass via an external program.\r\n\r\n```json\r\n{\r\n    "/app.js":[\r\n        "bower_components/angular-material/angular-material.js",\r\n        "bower_components/angular-route/angular-route.js",\r\n        "bower_components/angular-aria/angular-aria.js",\r\n        "bower_components/angular-sanitize/angular-sanitize.js",\r\n        "bower_components/angular-i18n/angular-locale_fr-fr.js",\r\n        "bower_components/angular-animate/angular-animate.js",\r\n        "web/app.js"\r\n    ],\r\n    "/app.css":[\r\n        "assets/mixins.scss",\r\n        "bower_components/angular-material/angular-material.css",\r\n        "assets/master.scss"\r\n    ]   \r\n}\r\n```\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <link rel=stylesheet type="text/css" href="/app.css">\r\n    </head>\r\n    <body>\r\n        <script src="/app.js"></script>\r\n    </body>\r\n</html>\r\n```\r\n\r\n## Define your service\r\n\r\n```js\r\nvar Q = require(\'q\');\r\n\r\nfunction ApplicationService($config) {\r\n    if ($config.verbose) console.log("ApplicationService created.");\r\n};\r\n\r\nApplicationService.prototype.constructor = ApplicationService;\r\n\r\nApplicationService.prototype.getHelloworld = function (request, response, promise) {\r\n    return promise.then(function (self) {\r\n        var content = { message: "Hello World" };\r\n        return response.send({ request: request, content: content });\r\n    });\r\n};\r\n\r\nexports = module.exports = ApplicationService;\r\n```\r\n\r\n## Create your server\r\n\r\n  * inject(service, location): inject your service, define a service name and the location of your package.\r\n  * load(): resolve all services.\r\n  * invoke(request, response): delegate the response to Qwebs.\r\n\r\n```js\r\nvar Qwebs = require(\'qwebs\');\r\n\r\nvar qwebs = new Qwebs();\r\nqwebs.inject("$app", "./applicationservice");\r\nqwebs.get(\'/\', "$app", "getHelloworld"); \r\n\r\nqwebs.load().then(function() {\r\n    http.createServer(function (request, response) {\r\n        return qwebs.invoke(request, response).catch(function(error) {\r\n            console.log(error);\r\n        });\r\n    }).listen(1337, "127.0.0.1");\r\n});\r\n```\r\n  \r\n## Services\r\n\r\n  * $config: your configuration.\r\n  * $qwebs: qwebs instance.\r\n  * $injector: resolve services at runtime.\r\n  * $responseProxy: extand http.ServerResponse.\r\n  * $response: default response extension.\r\n  * $qjimp: convert and manipulate images.\r\n  * $repository: load and retrieve files store in a folder.\r\n  \r\n## Others Services\r\n\r\n  * [$mongo](https://www.npmjs.com/package/qwebs-mongo)\r\n  * [$authentication](https://www.npmjs.com/package/qwebs-auth-jwt)\r\n  * [$https](https://www.npmjs.com/package/qwebs-https)\r\n  * [$nodemailer](https://www.npmjs.com/package/qwebs-nodemailer)\r\n\r\n## Installation\r\n\r\n```bash\r\n$ npm install qwebs\r\n```\r\n\r\n## Examples\r\n\r\nTo run our examples, clone the Qwebs repo and install the dependencies.\r\n\r\n```bash\r\n$ git clone https://github.com/beny78/qwebs --depth 1\r\n$ cd qwebs\r\n$ npm install\r\n$ cd exemples/helloworld\r\n$ node server.js\r\n```\r\n\r\n## Test\r\n\r\nTo run our tests, clone the Qwebs repo and install the dependencies.\r\n\r\n```bash\r\n$ git clone https://github.com/beny78/qwebs --depth 1\r\n$ cd qwebs\r\n$ npm install\r\n$ cd tests\r\n$ node.exe "..\\node_modules\\jasmine-node\\bin\\jasmine-node" --verbose .\r\n```\r\n\r\n[npm-image]: https://img.shields.io/npm/v/qwebs.svg\r\n[npm-url]: https://npmjs.org/package/qwebs\r\n[travis-image]: https://travis-ci.org/beny78/qwebs.svg?branch=master\r\n[travis-url]: https://travis-ci.org/beny78/qwebs\r\n[coveralls-image]: https://coveralls.io/repos/beny78/qwebs/badge.svg?branch=master&service=github\r\n[coveralls-url]: https://coveralls.io/github/beny78/qwebs?branch=master\r\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: 'cdc3f3b516031af7cc055c4d717325f84eb1da02',
17 silly publish   _id: 'qwebs@0.0.37',
17 silly publish   _shasum: '6df267d31e45427fbf767af17e16c9af4961b4f9',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name qwebs
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/qwebs
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading C:\Users\Ben\AppData\Roaming\npm-cache\qwebs\0.0.37\package.tgz
25 verbose request uri https://registry.npmjs.org/qwebs
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 00:22:24
28 verbose request using bearer token for auth
29 verbose request id e939ea770a6a8fba
30 http request PUT https://registry.npmjs.org/qwebs
31 http 403 https://registry.npmjs.org/qwebs
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=300',
32 verbose headers   'content-length': '96',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Wed, 13 Jan 2016 23:22:35 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-fra1239-FRA',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1452727349.852041,VS0,VE5584' }
33 verbose request invalidating C:\Users\Ben\AppData\Roaming\npm-cache\registry.npmjs.org\qwebs on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 0.0.37." : qwebs
35 verbose stack     at makeError (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:263:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:251:14)
35 verbose stack     at Request._callback (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:171:14)
35 verbose stack     at Request.self.callback (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:1073:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:1019:12)
36 verbose statusCode 403
37 verbose pkgid qwebs
38 verbose cwd C:\Dev\qwebs\qwebs
39 error Windows_NT 10.0.10240
40 error argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
41 error node v4.1.1
42 error npm  v2.14.4
43 error code E403
44 error "You cannot publish over the previously published version 0.0.37." : qwebs
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
